  swagger: '2.0'
  info:
    title: Bank Argent API documentation
    description: Contains all available API endpoints in this codebase
    version: '1.0.0'
    termsOfService: 'http://swagger.io/terms/'
  host: localhost:3001
  basePath: /api/v1
  schemes:
    - http
  paths:
    /user/login:
      post:
        tags:
          - User Module
        summary: Login
        description: API for Login
        parameters:
          - in: body
            name: body
            description: Login Payload
            required: true
            schema:
              $ref: '#/definitions/Login'
        produces:
          - application/json
        responses:
          '200':
            description: Login Successfully
            schema:
              $ref: '#/definitions/LoginResponse'
          '400':
            description: Invalid Fields
          '500':
            description: Internal Server Error
    /user/signup:
      post: 
        tags:
          - User Module
        summary: Signup
        description: API for Signup
        parameters:
          - in: body
            name: body
            description: Signup Payload
            required: true
            schema:
              $ref: '#/definitions/User'
        produces:
          - application/json
        responses:
          '200':
            description: Signup Successfully
            schema:
              $ref: '#/definitions/ApiResponse'
          '400':
            description: Invalid Fields
          '500':
            description: Internal Server Error
    /user/profile:
      post:
        security:
          - Bearer: []
        tags:
          - User Module
        summary: User Profile API
        description: API for fetching a user profile
        parameters:
          - in: header
            type: string
            name: Authorization
            description: Attach Bearer JWT token
            required: true
        produces:
          - application/json
        responses:
          '200':
            description: User profile retrieved successully
            schema:
              $ref: '#/definitions/ApiResponse'
          '400':
            description: Invalid Fields
          '500':
            description: Internal Server Error
      put:
        security:
          - Bearer: []
        tags:
          - User Module
        summary: User Profile API
        description: API for updating a user profile
        parameters:
          - in: header
            type: string
            name: Authorization
            description: Attach Bearer JWT token
            required: true
          - in: body
            name: body
            description: Update user profile attributes
            required: true
            schema:
              $ref: '#/definitions/UserProfile'
        produces:
          - application/json
        responses:
          '200':
            description: User profile retrieved successully
            schema:
              $ref: '#/definitions/ApiResponse'
          '400':
            description: Invalid Fields
          '500':
            description: Internal Server Error
    # API Transation - d√©but
    # Endpoint: transactions pour le mois en cours
    /user/transaction:
      get:
        security:
          - Bearer: []
        tags:
          - User Module
        summary: User Transaction API   
        description: API for fetching all transactions over a period
        parameters:
          - in: header
            type: string
            name: Authorization
            description: Attach Bearer JWT token
            required: true
        produces: 
          - application/json
        responses:
          '200':
            description: User transactions retrieved successully
            schema:
              $ref: '#/definitions/AllTransactions'
          '400':
            description: Invalid Fields
          '500':
            description: Internal Server Error  
    # Endpoint: visualisation transaction dans une autre vue
    /user/transaction/{transactionId}:
      get:
        security:
          - Bearer: []
        tags:
          - User Module
        summary: User Transaction API   
        description: API for fetching one transaction
        parameters:
          - in: header
            type: string
            name: Authorization
            description: Attach Bearer JWT token
            required: true
          - name: transactionId
            in: path
            required: true
            description: The ID of the transaction to return
            type: number
        produces: 
          - application/json
        responses:
          '200':
            description: User transaction retrieved successully
            schema:
              $ref: '#/definitions/TransactionModel'
          '404':
            description: invalid field
          '500':
            description: Internal Server Error 
    #Endpoint Ajouter, modifier ou supprimer des informations sur une transaction
      put:
        security:
          - Bearer: []
        tags:
          - User Module
        summary: User Profile API   
        description: API for updating one transaction
        parameters:
          - in: header
            type: string
            name: Authorization 
            description: Attach Bearer JWT token
            required: true
          - name: transactionId
            in: path
            required: true
            description: The ID of the transaction to return the updating transaction
            type: number
          - in : body
            name: body
            description: Update Transaction Information
            required: true
            schema: 
              $ref: '#/definitions/TransactionWithoutId'
        produces: 
          - application/json
        responses:
          '200':
            description: User transaction retrieved successully
            schema:
              $ref: '#/definitions/TransactionModel'
          '404':
            description: UnKnown Transaction
          '500':
            description: Internal Server Error 

    # API Transaction - fin
  securityDefinitions:
    Bearer:
      type: apiKey
      name: Authorization
      in: header
  definitions:
    User:
      properties:
        email:
          type: string
          description: user email
        password:
          type: string
          description: user password
        firstName:
          type: string
          description: user first name
        lastName:
          type: string
          description: user last name
    Login:
      properties:
        email:
          type: string
          description: user email
        password:
          type: string
          description: user password
    ApiResponse:
      type: object
      properties:
        status:
          type: integer
        message:
          type: string
        body:
          type: object
          properties:
            id:
              type: string
            email:
              type: string
    LoginResponse:
      type: object
      properties:
        token:
          type: string
    UserProfile:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
    TransactionPeriod:
      properties:
        dateStart:
          type: string
          format: date
          description: start date
        dateEnd:
          type: string
          format: date
          description: end date
    AllTransactions:
      type: array
      items:
        $ref: '#/definitions/TransactionModel'
    TransactionModel:  
      type: object
      properties:
        id: 
          type: number
        date:
          type: string   
          format: date
        category: 
          type: string
        description:
          type: string  
        amount:
          type: number
          format: float
    TransactionWithoutId:  
      type: object
      properties:
        category: 
          type: string
        description:
          type: string
